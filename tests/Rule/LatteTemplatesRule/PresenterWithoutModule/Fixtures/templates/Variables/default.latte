{block content}

<h1>{$title}</h1>

<div n:foreach="$items as $item">
    <a n:tag-if="$item->title">
        {$item->id} - {$item->title}
    </a>
</div>

{$variableFromOtherMethod}
{$variableFromParent}
{$variableFromParentCalledViaParent}
{$viaGetTemplate}
{$startup}
{$startupParent}
{$fromRenderDefault}
{$nonExistingVariable}
{$fromOtherAction}

{php \PhpStan\dumpType($stringLists)}
{foreach $stringLists as $stringList}
    {php \PhpStan\dumpType($stringList)}
{/foreach}

{foreach $stringLists as $stringList}
    {if $iterator->first}START{/if}
    {if $iterator->isFirst()}START{/if}
    {$iterator->counter}
    {$iterator->getCounter()}
    {php \PhpStan\dumpType($stringList)}
    {foreach $stringList as $string}
        {if $iterator->first}INNER START{/if}
        {if $iterator->isFirst()}INNER START{/if}
        {$iterator->counter}
        {$iterator->getCounter()}
        {php \PhpStan\dumpType($string)}
        {if $iterator->last}INNER END{/if}
        {if $iterator->isLast()}INNER END{/if}
    {/foreach}
    {if $iterator->last}END{/if}
    {if $iterator->isLast()}END{/if}
{/foreach}

{php \PhpStan\dumpType($localStrings)}
{foreach $localStrings as $string}
    {php \PhpStan\dumpType($string)}
{/foreach}

{foreach $localStrings as $string}
    {if $iterator->first}START{/if}
    {if $iterator->isFirst()}START{/if}
    {$iterator->counter}
    {$iterator->getCounter()}
    {$iterator->getCounter0()}
    {php \PhpStan\dumpType($string)}
    {if $iterator->last}END{/if}
    {if $iterator->isLast()}END{/if}
{/foreach}

{$overwritted}
{$overwritting}
{$parentOverwritted}
{$parentOverwritting}

{$calledParentOverwritted}
{$calledParentOverwritting}
{$calledParentSecondOverwritted}
{$calledParentSecondOverwritting}

{php \PhpStan\dumpType($obj)}

{php \PhpStan\dumpType($array1)}
{php \PhpStan\dumpType($array2)}
{php \PhpStan\dumpType($list1)}
{php \PhpStan\dumpType($list2)}
{php \PhpStan\dumpType($array1WithoutType)}
{php \PhpStan\dumpType($array2WithoutType)}
{php \PhpStan\dumpType($list1WithType)}
{php \PhpStan\dumpType($list2WithType)}
{php \PhpStan\dumpType($variableFromMethodCallOnVariable)}
{$dynamic}

{var $top = round(456 / 10)};
<style>
    .foo-bar {
        top: {$top}%;
    }
</style>

{var $slicedLocalStrings = slice($localStrings, 1)}
{php \PhpStan\dumpType($slicedLocalStrings)}
{var $slicedTitle = slice($title, 1)}
{php \PhpStan\dumpType($slicedTitle)}
